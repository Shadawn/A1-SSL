//Для механизма А1БСП_ИсторияИзменений.
&НаСервере
&Вместо("ЗаполнитьТипыОбъектовВДеревеЗначений")
Процедура А1БСП_ЗаполнитьТипыОбъектовВДеревеЗначений()
	НастройкиВерсионирования = ТекущиеНастройкиВерсионирования();
	
	ДеревоОМ = РеквизитФормыВЗначение("ДеревоОбъектовМетаданных");
	ДеревоОМ.Строки.Очистить();
	
	// Тип параметра команды ИсторияИзменений содержит состав объектов для которых 
	// применяется версионирование.
	МассивТипов = Метаданные.ОбщиеКоманды.ИсторияИзменений.ТипПараметраКоманды.Типы();
	//А1Начало
	ОбъектыМеханизма = А1Э_Механизмы.ОбъектыМеханизма("А1БСП_ИсторияИзменений");
	Для Каждого Пара Из ОбъектыМеханизма Цикл
		ЧастиИмени = А1Э_Строки.ПередПосле(Пара.Ключ, ".");
		МассивТипов.Добавить(Тип(ЧастиИмени.Перед + "Ссылка." + ЧастиИмени.После));
	КонецЦикла;
	А1Э_Массивы.Свернуть(МассивТипов);
	//А1Конец
	ЕстьБизнесПроцессы = Ложь;
	ВсеСправочники = Справочники.ТипВсеСсылки();
	ВсеДокументы = Документы.ТипВсеСсылки();
	УзелСправочники = Неопределено;
	УзелДокументы = Неопределено;
	УзелБизнесПроцессы = Неопределено;
	
	Для Каждого Тип Из МассивТипов Цикл
		Если Тип = Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных") Тогда
			Продолжить;
		КонецЕсли;
		Если ВсеСправочники.СодержитТип(Тип) Тогда
			Если УзелСправочники = НеОпределено Тогда
				УзелСправочники = ДеревоОМ.Строки.Добавить();
				УзелСправочники.СинонимНаименованияОбъекта = НСтр("ru = 'Справочники'");
				УзелСправочники.КлассОбъекта = "01КлассСправочникиКорень";
				УзелСправочники.КодКартинки = 2;
			КонецЕсли;
			НоваяСтрокаТаблицы = УзелСправочники.Строки.Добавить();
			НоваяСтрокаТаблицы.КодКартинки = 19;
			НоваяСтрокаТаблицы.КлассОбъекта = "КлассСправочники";
		ИначеЕсли ВсеДокументы.СодержитТип(Тип) Тогда
			Если УзелДокументы = НеОпределено Тогда
				УзелДокументы = ДеревоОМ.Строки.Добавить();
				УзелДокументы.СинонимНаименованияОбъекта = НСтр("ru = 'Документы'");
				УзелДокументы.КлассОбъекта = "02КлассДокументыКорень";
				УзелДокументы.КодКартинки = 3;
			КонецЕсли;
			НоваяСтрокаТаблицы = УзелДокументы.Строки.Добавить();
			НоваяСтрокаТаблицы.КодКартинки = 20;
			НоваяСтрокаТаблицы.КлассОбъекта = "КлассДокументы";
		ИначеЕсли БизнесПроцессы.ТипВсеСсылки().СодержитТип(Тип) Тогда
			Если УзелБизнесПроцессы = Неопределено Тогда
				УзелБизнесПроцессы = ДеревоОМ.Строки.Добавить();
				УзелБизнесПроцессы.СинонимНаименованияОбъекта = НСтр("ru = 'Бизнес-процессы'");
				УзелБизнесПроцессы.КлассОбъекта = "03БизнесПроцессыКорень";
				УзелБизнесПроцессы.ТипОбъекта = "БизнесПроцессы";
			КонецЕсли;
			НоваяСтрокаТаблицы = УзелБизнесПроцессы.Строки.Добавить();
			НоваяСтрокаТаблицы.КлассОбъекта = "КлассБизнесПроцессы";
			ЕстьБизнесПроцессы = Истина;
		ИначеЕсли ПланыСчетов.ТипВсеСсылки().СодержитТип(Тип) Тогда
			ИмяГруппы = "04ПланыСчетовКорень";
			ПредставлениеГруппы = НСтр("ru = 'Планы счетов'");
			ТипОбъектовГруппы = "ПланыСчетов";
			Группа = ДеревоОМ.Строки.Найти(ИмяГруппы, "КлассОбъекта");
			Если Группа = Неопределено Тогда
				Группа = ДеревоОМ.Строки.Добавить();
				Группа.СинонимНаименованияОбъекта = ПредставлениеГруппы;
				Группа.КлассОбъекта = ИмяГруппы;
				Группа.ТипОбъекта = ТипОбъектовГруппы;
			КонецЕсли;
			НоваяСтрокаТаблицы = Группа.Строки.Добавить();
			НоваяСтрокаТаблицы.КлассОбъекта = "КлассПланыСчетов";
		ИначеЕсли ПланыВидовХарактеристик.ТипВсеСсылки().СодержитТип(Тип) Тогда
			ИмяГруппы = "05ПланыВидовХарактеристикКорень";
			ПредставлениеГруппы = НСтр("ru = 'Планы видов характеристик'");
			ТипОбъектовГруппы = "ПланыВидовХарактеристик";
			Группа = ДеревоОМ.Строки.Найти(ИмяГруппы, "КлассОбъекта");
			Если Группа = Неопределено Тогда
				Группа = ДеревоОМ.Строки.Добавить();
				Группа.СинонимНаименованияОбъекта = ПредставлениеГруппы;
				Группа.КлассОбъекта = ИмяГруппы;
				Группа.ТипОбъекта = ТипОбъектовГруппы;
			КонецЕсли;
			НоваяСтрокаТаблицы = Группа.Строки.Добавить();
			НоваяСтрокаТаблицы.КлассОбъекта = "КлассПланыВидовХарактеристик";
		ИначеЕсли ПланыВидовРасчета.ТипВсеСсылки().СодержитТип(Тип) Тогда
			ИмяГруппы = "06ПланыВидовРасчетаКорень";
			ПредставлениеГруппы = НСтр("ru = 'Планы видов расчета'");
			ТипОбъектовГруппы = "ПланыВидовРасчета";
			Группа = ДеревоОМ.Строки.Найти(ИмяГруппы, "КлассОбъекта");
			Если Группа = Неопределено Тогда
				Группа = ДеревоОМ.Строки.Добавить();
				Группа.СинонимНаименованияОбъекта = ПредставлениеГруппы;
				Группа.КлассОбъекта = ИмяГруппы;
				Группа.ТипОбъекта = ТипОбъектовГруппы;
			КонецЕсли;
			НоваяСтрокаТаблицы = Группа.Строки.Добавить();
			НоваяСтрокаТаблицы.КлассОбъекта = "КлассПланыВидовРасчета";
		КонецЕсли;
		МетаданныеОбъекта = Метаданные.НайтиПоТипу(Тип);
		НоваяСтрокаТаблицы.ТипОбъекта = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Тип);
		//А1Начало - так как дерево не поддерживает ИдентификаторыОбъектовРасширений, заменяем на полное имя.
		Если ТипЗнч(ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Тип)) = Тип("СправочникСсылка.ИдентификаторыОбъектовРасширений") Тогда
			НоваяСтрокаТаблицы.ТипОбъекта = МетаданныеОбъекта.ПолноеИмя();
		КонецЕсли;
		//А1Конец
		НоваяСтрокаТаблицы.СинонимНаименованияОбъекта = МетаданныеОбъекта.Синоним;
		
		НайденныеНастройки = НастройкиВерсионирования.НайтиСтроки(Новый Структура("ТипОбъекта", НоваяСтрокаТаблицы.ТипОбъекта));
		Если НайденныеНастройки.Количество() > 0 Тогда
			НоваяСтрокаТаблицы.ВариантВерсионирования = НайденныеНастройки[0].ВариантВерсионирования;
			НоваяСтрокаТаблицы.СрокХраненияВерсий = НайденныеНастройки[0].СрокХраненияВерсий;
			Если Не ЗначениеЗаполнено(НайденныеНастройки[0].СрокХраненияВерсий) Тогда
				НоваяСтрокаТаблицы.СрокХраненияВерсий = Перечисления.СрокиХраненияВерсий.Бессрочно;
			КонецЕсли;
		Иначе
			НоваяСтрокаТаблицы.ВариантВерсионирования = Перечисления.ВариантыВерсионированияОбъектов.НеВерсионировать;
			НоваяСтрокаТаблицы.СрокХраненияВерсий = Перечисления.СрокиХраненияВерсий.Бессрочно;
		КонецЕсли;
		
		Если НоваяСтрокаТаблицы.КлассОбъекта = "КлассДокументы" Тогда
			НоваяСтрокаТаблицы.Проводится = ? (МетаданныеОбъекта.Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить, Истина, Ложь);
		КонецЕсли;
	КонецЦикла;
	ДеревоОМ.Строки.Сортировать("КлассОбъекта");
	Для Каждого УзелВерхнегоУровня Из ДеревоОМ.Строки Цикл
		УзелВерхнегоУровня.Строки.Сортировать("СинонимНаименованияОбъекта");
	КонецЦикла;
	ЗначениеВРеквизитФормы(ДеревоОМ, "ДеревоОбъектовМетаданных");
	
	Элементы.ФормаВерсионироватьПриСтарте.Видимость = ЕстьБизнесПроцессы;
КонецПроцедуры
