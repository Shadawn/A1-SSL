#Если НЕ Клиент Тогда
	Функция ФункциналАктивен() Экспорт
		Возврат Метаданные.Справочники.ПрофилиГруппДоступа.Реквизиты.Найти("А1БСПД_Запрещающий") <> Неопределено;
	КонецФункции
	
	// см. УправлениеДоступомСлужебный.ТекущиеСвойстваПользователей
	//
	// Параметры:
	//  МассивПользователей	 - 	 - 
	// 
	// Возвращаемое значение:
	//   - 
	//
	Функция ТекущиеСвойстваПользователей(МассивПользователей) Экспорт
		Запрос = Новый Запрос;
		
		Запрос.УстановитьПараметр("ПустойИдентификатор",
		ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор());
		
		Если МассивПользователей = Неопределено Тогда
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Пользователи.Ссылка КАК Пользователь,
			|	Пользователи.ИдентификаторПользователяИБ
			|ПОМЕСТИТЬ ПроверяемыеПользователи
			|ИЗ
			|	Справочник.Пользователи КАК Пользователи
			|ГДЕ
			|	Пользователи.Служебный = ЛОЖЬ
			|	И Пользователи.ИдентификаторПользователяИБ <> &ПустойИдентификатор
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВнешниеПользователи.Ссылка,
			|	ВнешниеПользователи.ИдентификаторПользователяИБ
			|ИЗ
			|	Справочник.ВнешниеПользователи КАК ВнешниеПользователи
			|ГДЕ
			|	ВнешниеПользователи.ИдентификаторПользователяИБ <> &ПустойИдентификатор";
			
		ИначеЕсли ТипЗнч(МассивПользователей) = Тип("Тип") Тогда
			Если Метаданные.НайтиПоТипу(МассивПользователей) = Метаданные.Справочники.ВнешниеПользователи Тогда
				Запрос.Текст =
				"ВЫБРАТЬ
				|	ВнешниеПользователи.Ссылка КАК Пользователь,
				|	ВнешниеПользователи.ИдентификаторПользователяИБ
				|ПОМЕСТИТЬ ПроверяемыеПользователи
				|ИЗ
				|	Справочник.ВнешниеПользователи КАК ВнешниеПользователи
				|ГДЕ
				|	ВнешниеПользователи.ИдентификаторПользователяИБ <> &ПустойИдентификатор";
			Иначе
				Запрос.Текст =
				"ВЫБРАТЬ
				|	Пользователи.Ссылка КАК Пользователь,
				|	Пользователи.ИдентификаторПользователяИБ
				|ПОМЕСТИТЬ ПроверяемыеПользователи
				|ИЗ
				|	Справочник.Пользователи КАК Пользователи
				|ГДЕ
				|	Пользователи.Служебный = ЛОЖЬ
				|	И Пользователи.ИдентификаторПользователяИБ <> &ПустойИдентификатор";
			КонецЕсли;
		Иначе
			ИсходныеПользователи = Новый ТаблицаЗначений;
			ИсходныеПользователи.Колонки.Добавить("Пользователь", Новый ОписаниеТипов(
			"СправочникСсылка.Пользователи, СправочникСсылка.ВнешниеПользователи"));
			
			Для каждого Пользователь Из МассивПользователей Цикл
				ИсходныеПользователи.Добавить().Пользователь = Пользователь;
			КонецЦикла;
			
			Запрос.УстановитьПараметр("ИсходныеПользователи", ИсходныеПользователи);
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ИсходныеПользователи.Пользователь
			|ПОМЕСТИТЬ ИсходныеПользователи
			|ИЗ
			|	&ИсходныеПользователи КАК ИсходныеПользователи
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Пользователи.Ссылка КАК Пользователь,
			|	Пользователи.ИдентификаторПользователяИБ
			|ПОМЕСТИТЬ ПроверяемыеПользователи
			|ИЗ
			|	Справочник.Пользователи КАК Пользователи
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсходныеПользователи КАК ИсходныеПользователи
			|		ПО Пользователи.Ссылка = ИсходныеПользователи.Пользователь
			|			И (Пользователи.Служебный = ЛОЖЬ)
			|			И (Пользователи.ИдентификаторПользователяИБ <> &ПустойИдентификатор)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВнешниеПользователи.Ссылка,
			|	ВнешниеПользователи.ИдентификаторПользователяИБ
			|ИЗ
			|	Справочник.ВнешниеПользователи КАК ВнешниеПользователи
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсходныеПользователи КАК ИсходныеПользователи
			|		ПО ВнешниеПользователи.Ссылка = ИсходныеПользователи.Пользователь
			|			И (ВнешниеПользователи.ИдентификаторПользователяИБ <> &ПустойИдентификатор)";
		КонецЕсли;
		
		ТекстЗапроса = //А1 - к последнему запросу пакета добавлен функционал запрещающих профилей.
		"ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Ссылка,
		|	Пользователи.ИдентификаторПользователяИБ КАК ИдентификаторПользователяИБ
		|ИЗ
		|	Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
		|		ПО (ГруппыДоступаПользователи.Ссылка = ЗНАЧЕНИЕ(Справочник.ГруппыДоступа.Администраторы))
		|			И (ГруппыДоступаПользователи.Пользователь = Пользователи.Ссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПроверяемыеПользователи.Пользователь КАК Пользователь,
		|	ПроверяемыеПользователи.ИдентификаторПользователяИБ КАК ИдентификаторПользователяИБ
		|ИЗ
		|	ПроверяемыеПользователи КАК ПроверяемыеПользователи
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПроверяемыеПользователи.Пользователь КАК Пользователь,
		|	ГруппыДоступаПользователи.Ссылка.Профиль КАК Профиль
		|ПОМЕСТИТЬ ПрофилиПользователей
		|ИЗ
		|	ПроверяемыеПользователи КАК ПроверяемыеПользователи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
		|		ПО ПроверяемыеПользователи.Пользователь = СоставыГруппПользователей.Пользователь
		|			И (СоставыГруппПользователей.Используется)
		|			И (&ИсключитьВнешнихПользователей)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
		|		ПО (СоставыГруппПользователей.ГруппаПользователей = ГруппыДоступаПользователи.Пользователь)
		|			И (НЕ ГруппыДоступаПользователи.Ссылка.ПометкаУдаления)
		|			И (НЕ ГруппыДоступаПользователи.Ссылка.Профиль.ПометкаУдаления)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПрофилиПользователей.Пользователь КАК Пользователь,
		|	Роли.Роль КАК РольСсылка,
		|	Роли.Роль.Имя КАК Роль
		|ИЗ
		|	ПрофилиПользователей КАК ПрофилиПользователей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК Роли
		|		ПО (Роли.Ссылка = ПрофилиПользователей.Профиль)
		|			И (Роли.Ссылка.А1БСПД_Запрещающий = ЛОЖЬ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПрофилиПользователей КАК ЗапрещающиеПрофили
		|		ПО ПрофилиПользователей.Пользователь = ЗапрещающиеПрофили.Пользователь
		|			И (ЗапрещающиеПрофили.Профиль.А1БСПД_Запрещающий = ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК РолиЗапрещающихПрофилей
		|		ПО (ЗапрещающиеПрофили.Профиль = РолиЗапрещающихПрофилей.Ссылка)
		|			И (Роли.Роль = РолиЗапрещающихПрофилей.Роль)
		|ГДЕ
		|	Роли.Роль <> НЕОПРЕДЕЛЕНО
		|	И РолиЗапрещающихПрофилей.Ссылка ЕСТЬ NULL
		|";
		
		Запрос.Текст = Запрос.Текст + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|" + ТекстЗапроса;
		
		Если Константы.ИспользоватьВнешнихПользователей.Получить() Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИсключитьВнешнихПользователей", "Истина");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИсключитьВнешнихПользователей",
			"ТИПЗНАЧЕНИЯ(ПроверяемыеПользователи.Пользователь) = ТИП(Справочник.Пользователи)");
		КонецЕсли;
		
		РезультатыЗапросов = Запрос.ВыполнитьПакет();
		ПоследнийРезультат = РезультатыЗапросов.Количество()-1;
		Итог = Новый Структура;
		
		Итог.Вставить("Администраторы", Новый Соответствие);
		
		Для каждого Строка Из РезультатыЗапросов[ПоследнийРезультат-3].Выгрузить() Цикл
			Итог.Администраторы.Вставить(Строка.Ссылка, Истина);
		КонецЦикла;
		
		Итог.Вставить("ИдентификаторыПользователейИБ", РезультатыЗапросов[ПоследнийРезультат-2].Выгрузить());
		Итог.ИдентификаторыПользователейИБ.Индексы.Добавить("Пользователь");
		
		Итог.Вставить("РолиПользователей", РезультатыЗапросов[ПоследнийРезультат].Выгрузить());
		Итог.РолиПользователей.Индексы.Добавить("Пользователь");
		
		РолиВсехПользователей = Итог.РолиПользователей.Скопировать(, "РольСсылка");
		РолиВсехПользователей.Свернуть("РольСсылка");
		ИдентификаторыРолей = РолиВсехПользователей.ВыгрузитьКолонку("РольСсылка");
		МетаданныеРолей = ОбщегоНазначения.ОбъектыМетаданныхПоИдентификаторам(ИдентификаторыРолей, Ложь);
		
		Для Каждого Строка Из Итог.РолиПользователей Цикл
			МетаданныеРоли = МетаданныеРолей.Получить(Строка.РольСсылка);
			Если ТипЗнч(МетаданныеРоли) = Тип("ОбъектМетаданных") Тогда
				Строка.Роль = МетаданныеРоли.Имя;
			КонецЕсли;
		КонецЦикла;
		
		Возврат Итог;
	КонецФункции 
#КонецЕсли
